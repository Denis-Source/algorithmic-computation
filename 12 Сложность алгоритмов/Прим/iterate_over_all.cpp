/*
    Скрипт, демонстрирующий поиск элемента в массиве
    с помощью простого перебора всех элементов
*/

// Импорт библиотек
// Для printf()
#include <stdio.h>
// Для rand()
#include <cstdlib>
// Для sort()
#include <algorithm>

using namespace std;

/*
    Функция наполнения массива псевдослучайными значениями
    После наполнения происходит его сортировка

    Для работы требует массив, а также значение его длинны
    Функция ничего не возвращает, а всего лишь работает
    с указанным массивом
*/
void genSortedValues(int array[], int len) {
    // Для генерации псевдослучайных чисел
    // необходимо значения зерна
    // используется для инициализации генератора случ. чисел
    int seed = 0;

    // Установка значения в генераторе
    srand(seed);

    // Генерация случ. числа с последующим его  присваиванием  
    // на каждый элемент массива
    for (int i = 0; i < len; i++) {
        array[i] = rand();
    }
    // Сортировка массива осущ. встроенной функцией модуля algorithm
    // функция sort() в худшем случае имеет сложность O = N log N
    sort(array, array + len);
}

/*
    Функция нахождения элемента в массиве с помощью простого перебора

    Функция принимает аргументы:
        - отсортированный массив целых чисел
        - длину массива
        - искомое целое число
    Функция возвращает целое число – индекс массива

    Сложность алгоритма O = n

    При наличии одинаковых элементов находится первый по порядку
    При отсутствии – возвращает ложное значение -1

    Также использует переменную счетчика для отображения
    количества операций
*/
int findValue(int array[], int len, int number) {
    // Инициализация счетчика
    int counter = 0;

    // Установка возвращаемого значения на ложное значение
    // в случае если не найдется нужный элемент – он и возвращается
    int index = -1;

    // Инкремент счетчика производится при каждой операции
    counter++;

    // Перебор каждого значение и сравнение его с искомым
    for (int i = 0; i < len; i++) {
        counter++;

        // Сравнение адресуемого значения с искомым
        if (array[i] == number) {
            // В случае успеха – присвоение индекса элемента 
            // на возвр. значение
            index = i;
            counter++;

            // остановка цикла – результат достигнут
            break;
        }
    }

    // Вывод на экран значения счетчика и возврат индекса
    counter++;
    printf("It took %d operations\n", counter);
    return index;
}

int main() {
    // Определение длины массива
    const int arrLen = 100000;
    // Инициализация массива и его наполнение с помощью genSortedValues()
    int arr[arrLen];
    genSortedValues(arr, arrLen);

    // Определение искомого значения
    int numberToFind = 9999;

    // Поиск значения с помощью функции findValue()
    int value = findValue(arr, arrLen, numberToFind);

    // Вывод на экран результата
    printf("Found number %d, at %d position\n", numberToFind, value);
}

